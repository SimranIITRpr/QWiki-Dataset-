DICTIONARIES
Hello guys, welcome to yet another programming screen cast, in this programming screen cast we are going to see of data structure called as the dictionaries. I hope you are familiar with the term data structures because in your precious weeks you have been introduced to data structure called list. This week we will see a data structure called dictionary. So dictionary as the word says it is similar to the English dictionary or any language dictionary for that matter. How is the data stored in the dictionary? You have words and meanings corresponding to it so there are two items in this dictionary words and the meaning something like that even in python dictionaries you have two elements and the relationship between the two is what is model by this data structure called dictionary, technical terminology is key and the value is what they say it is key and the value is what they say, key is nothing but the unique identifier for a given value for example this is the common example which people generally say there may be multiple people sharing a same name in a college in that case to identify a student uniquely the college may assign some id number something like that there is unique id associated with an item that is called as key and the value is nothing but the other details of the item for example assume there are more people by the name amit so if there are multiple persons with name amit they may assign some id number and they may store the person’s name. So that the id number would uniquely identify which person is being referred to as something like that, in such applications this dictionary data structure is highly useful, so we will take some other example this student id and the student details is something with generally people say so let us take some other example in this screen cast, I will take the currency conversion concept so here our keys that is our unique things will be our name of the currency and the value will be the conversion factor so I will take Indian rupees as the base so I will take the different currencies dollar euro yen whatever you say I will, dollar is the key and value is nothing but one dollar equals how many Indian rupees? That will be my value this is what I am going to take in this screen cast. So dictionary as you could see is a data structure that models this kind of relationship that there is a unique identifier and value associated with it. So two, two elements relationship what is captured here ok let us see how shall we create a dictionary. Very simple, how did you created a list? You said l equal to this kind of brackets right? This will create a list something like that for creating a dictionary you have to give the name of the dictionary conversion factor let me name the name that itself conversion factor this is a dictionary see this is the curly braces as you could see her, these are the curly braces, curly braces denotes the dictionary, so if say this and press enter a empty dictionary gets created so if I say conversion factor and press enter see an empty dictionary is what is shown as the output, so now what should I do? I should start adding the values that is I should adding the conversion factor for various currency systems, as I said I will be taking the Indian rupees as the standard one to which we want to convert, so that is from this particular currency system we dollar or euro or yen whatever be there from there we want to convert it to the Indian rupees that’s what we want to do here, I want to add the value of dollar please note that these are just approximate value I want to add the value dollar so how should I do that? Here goes the syntax please observe, conversion factor this is the name of
 
the dictionary and I need to use the same brackets that I used in list, here is should give the value of my unique key here the value of my unique key is I will say dollar, dollar is my unique key and equal to what is the corresponding value, I assume that it is sixty rupees, one dollar is equal to sixty rupees this is just my assumption so I give the name of the dictionary as you could see here I gave the name of the dictionary this brackets this square brackets within the square brackets I gave my key that is the unique identifier and equal to the corresponding value this is the syntax of how you have to add a new item, so new item got added how would we know? Let us just display the conversion factor see a new item got added dollar colon sixty so dollar is the key corresponding value is sixty it got added, if I want to add further more item I can add it let me do that, euro equals let me say eighty this is just an approximate see I print it now see you got it, dollar colon sixty, euro colon eighty another item got added up so this is how dictionary is worked you have a key which uniquely identifies your value and the associated thing is called as a value. Now let us see how can we view the dictionary? So this is in console I am doing it, but when you do it do it in your programme you generally use the print command just like how you gave print the list something like that you can give here as well print conversion factor which is the name of our dictionary, you can give this see this got printed dollar and then euro and now let us see how can we access the individual items. So I want to know that is the value of euro, how would I do that? I would say conversion factor of the key is euro that is I want to know the value corresponding to euro, see eighty is shown as the output that is corresponding to euro the value stored is eighty so this is how you access this specific value, you retrieve the specific value now if you want to list out all the keys present in your dictionary, you need to say conversion factor which is the name of our dictionary dot keys this is the functionality if I put this see I got the list of all keys that has been enhanced into some special data structure so if you wanted to be there in the list I need to convert it into list, you could see here if I converted into a list I got the output as a list this list the all keys that are present in your dictionary if you want to list the values that is the associated item you want to list it, it is simple instead of keys you put values and as you could see here the values are listed corresponding values are listed in case you want to fetch both keys and values simultaneously that is what are all the items that is present in the dictionary is what you want to see, the dictionary name here it is conversion factor dot items it will list the items in the dictionary see it says dollar comma sixty euro comma this whole thing what you call as tupple that I something but something which is constant as dollars and sixty are associated ones you cannot separate it something like that also if you want to know what are all the functionality that is available conversion factor dot and press the tab that is you get the all functionality whatever is available from this whatever is the item you want to know you can type that for example let me say pop is the functionality I want to know, I want to know what this functionality does? You just put a question mark at the end so it gives the documentation corresponding to it so it says it will remove the specified key and return the corresponding value the key is not found it will raise an error for example here dollar and euro is there now if I say conversion factor of yen I know that there is no such key but still let me show you see it has raised what is called the key error states that this particular key is not present in your dictionary so the key error would be raised in case if the key what you ask is not present otherwise it will remove the key and return you the value associated with it, there are lot of

functionalities available as I had said using the tab key you can get to know of all those functionalities, now we shall see updating, this for example I had written dollar is sixty and euro is eighty and I suddenly came to know that the value of dollar has been changed so I want to update it, how would I do that? Please observe it is very similar to insert the thing on your key conversion factor of dollar is equal to the new value, let me say not sixty its sixty five let me say sixty five and enter now let me list the dictionary see it got updated it was sixty initially it got updated to sixty five so this particular statement is same for create as well as update, if such a key is present already it will update the old value and write the new value if it is not present it will insert a new value that is what this statement does. This is the same syntax for both create as well as update so how shall we delete a specific key from the dictionary so let me add one more element conversion factor of yen, this is just my approximation I assume that it is fifty rupees this is my assumption ok so let me enter so now let me check what is in my dictionary so my dictionary contains dollar euro yen now I want to delete specific some values see for example yen is something I had inserted but then I realise that I don’t need it so I want to delete it so how would I do it? Observe the syntax d e l is the key word for delete del space name of the dictionary name of the dictionary and inside that you need to give the key so it would search for the value corresponding to the key and delete that key value back this what this functionality would do, key would have got deleted now let me display see it was deleted see if the initial stage when we print it we had yen I had deleted it so if you would see in this updated dictionary there is no specific value corresponding to yen in case I give some key which is not in the dictionary it would throw a key error as you had seen earlier so this is how you handle with dictionary as I had said let us do a small currency conversion so I want the value in rupees, this is thirty Euros I want the value in rupees it is nothing but the value of Euros currently e into whatever is the conversion factor conversion factor corresponding to Euros is what I wanted now check the value of r it’s two thousand four hundred so thirty Euros is nothing but two thousand four hundred so in such situations you see a data structure like dictionary is very handy, I would recommend that guys use this tab key and explore whole lot of functions that are available in dictionary keep exploring keep learning happy leaning thank for watching this screen cast have a nice day.
SPEECH TO TEXT – NO NEED TO WRITE - 01
Hey shubudha! What happened? I see you are not able to sync your lips properly and that’s why your expression are not good. Actually the problem is I don’t know Punjabi and I don’t know the lyrics and its meaning so if you can help me with the lyrics then I can sync my lips according to it, I hope that won’t be a much trouble for you. No that is not a trouble for me; I will just write a programme and let you know the lyrics. Oh! Programme that’s awesome. Yeah I can write the programme for this, yeah sure then you give me then I will by heart the lyrics ok perfect.
SPEECH TO TEXT – NO NEED TO WRITE - 02
Hey everyone, as you saw shubudha struggling with the lyrics of the Punjabi song. Here I am to help her through python, through coding. You must be surprise how can we do it. In python there are many state of the art technologies one of them is speech recognition, speech recognition is an apn that has been provided to us by goggle. In this particular library it will just convert the audio file that you supply to text, it will convert the audio file to text so it will be easier for shubudha to by heart the lyrics then and improve on her dancing skills. So first of all how can you install it? Yes you first need to install it, you just use the command sudo pip install speech recognition, you just go to your terminal and type sudo pip install speech recognition it will ask you the password and then it will be downloaded to your pc, so it is very easy to install this particular library that is speech recognition. You just need to type on your terminal sudo pip install speech recognition and then there are many steps involved here to I will just you to create the audio file with the help of your microphone as I did just now. As I am Punjabi, I know Punjabi so I just spoked the words of the song in microphone and recorded the file then I converted that particular file to dot wav extension, yes whatever you record whatever you need to convert to text u need to convert that particular audio file to dot wav extension, I repeat this is very necessary speech recognition only works on dot wav extension files, you must have recorded the files and it maybe in dot wp4 and any other extension but if it is not on wav extension you need to convert it into wav extension so first of all you have to create and audio file with the help of your microphone and then you need to convert it into wav extension. Wav extension your audio file can be convert it into wav extension online, there are many sources that are readily available, you can easily convert your audio file into wav extension so basically what’s steps are involved here, first of all you have to install speech recognition, I repeat you have to install speech recognition with this particular command that is pip install speech recognition after that you have to create an audio file with the help of your microphone. Whatever you need to convert it to text and then you have to convert this particular audio file to dot wav extension these are the three steps that are involved here, first of all you need to do these three steps and then you will program. So let us do this three steps and program.
SPEECH TO TEXT – NO NEED TO WRITE - 03
Hey everyone, I am done with the steps, I first installed speech recognition then recorded to the file through micro phone and then converted the audio file into dot wav extension so these are the steps I have asked you to do I hope you have done with the steps, since you are all done with the steps let us start with the programme. So first of all you need to import speech and recognition that you have installed say it is basically import speech underscore recognition as sr you can use a name sr or you can just go with speech recognition it’s your wish. So first of all I create a variable name audio file that I will assign to my audio file so my audio file is sample underscore simran dot wav, speech note the fact speech recognition only recognises dot wav file so you have to convert your audio file to your dot wav then it will basically use audio file as the audio source, you the audio file as the source then you have to initialise the recogniser sr dot recogniser it will basically initialise the recogniser after that what you have to do is with sr dot audio file because you are using audio file here what name has been assigned to your audio file mine is audio underscore file we will use it as source, what you have to do here is audio is equal to r dot record source, so this function will basically read your audio file reads the audio file. So now what we have to do now here is we have to write try print audio file contains r dot recognise underscore goggle audio it will basically print the text, print the text that is there in your audio file, it will convert your spoken words to text, except sr dot unknown value error, you must be wondering what I am doing here, here basically it will raise an exception sr dot unknown value error in case it is not able to understand the audio, you will have to raise the exception here in case your goggle speech recognition module is not able to understand your audio file so I will write here print Google speech recognition could not understand audio, you are also have to write another exception that is except sr dot request error this will be, this will occur if the we are not able to get the results from Google speech recognition so you will write here couldn’t get the results from Google speech recognition so I use the word here exception instead of error please note the fact that exception is a type of error, I repeat exception is a type of error .so as you saw we first use the audio file as the source then we initialise the recogniser and then we read the audio file after that will Google speech recognition will basically recognise your audio file and convert it into text and in case it is not able to do that it will raise two exceptions, it can raise two exceptions first of all is if it is not able to understand the audio and second one is if it is not able to get the result from Google speech recognition, so we are done with the programme here let us try to run this programme and check whether I will be able to help shubudha or not, let us try to check that. Yes we have the audio file here; audio file contains that particular song and let me check that, yes! That is right, isn’t it amazing! We can just record our audio file and convert it into text so I am very happy I can help shubudha and I think she can by heart the lyrics and improve on her dancing skills I think so. So as you saw speech recognition is a state if the art technology that has been provided to us by the Google through python, so you can use this and convert your audio files to text, it is very very easy through python so thank you I hope this programme is very useful to you and have a nice day happy learning.
MONTE HALL - 3 DOORS AND A TWIST 01
Hey you are eating something? No nothing. Something there on your mouth nothing, is that chocolate? Yeah, hey you are eating chocolate, yeah show show show this is almost over wait I have one chocolate I will give you guys would you guys please share that? No, no, no, no I want one chocolate, I won’t share with you, I want, no no last time also you took last time also you took no I want no I want, I won’t share I will not share please share it please share it hey wait, wait, wait, wait see I have an idea let us play a game ok, if you are lucky, if you win the game you will get the chocolate, are you ok for this deal? Ok I will play the game, anyways I will win I will not share with you we will see we will see, will see will see let’s play the game yeah will see. so as I have said I have hidden my chocolates in one of this three bags, you are suppose to guess where would I have hidden, what would you like to choose? Hmmm I will choose this bag, this is your choice among the three bags let me make your life simpler, I will open this bag this is empty so the chocolate must be present in one of this two bags would you like to retain your choice or you would like to swap? No no no you are just tricking me this is my final choice I will stay with this, this is your final choice then I will close this ok now your turn is over I will call shubudha after her turn I will announce the results ok shubudha come as I have said I have one chocolate I have hidden it in one of these three bags you are suppose to guess which bag I would have hidden so which one you would like to choose? Out of three I have to choose one yeah, I will choose this bag, this is your choice yeah among three, yes let me make your life simpler I will open this bag, this is empty so chocolate must be present in one of these two bags would you still like to retain this choice of yours or you would like to swap? Oh this seems to be an interesting strategy let me think, I think I will swap I will swap this will be my final choice. Ok shubudha your turn is over, you had chosen that bag has your final choice, yes I will close this and I will call amit and will see the results ok, amit come ok. You had chosen this bag to be your final choice this contains, this is empty oh god and shubudha you had actually made a swap when I gave you a chance, yes, you initially choose this and you choose this let me open simultaneously, this is your final choice so let us zoom into this, this contains the chocolate and you win the chocolate, this is yours, thank you I won, can you please give me a bite no no no we had decided that we will not waste at least half half no no, I will not share one fourth at least no no no no I will not share. Ok so we saw that the mother is playing trick on the kid, she is trying to force him to swap force him to change the decision, the point is, is it really required what exactly is happening here? I am sure we all are confused right? So let me do one thing in the beginning of the video beginning of this lesson you saw three people playing a game right? The chocolate game and vidya takes them and makes them play a game while she puts a chocolate inside a bag and the point is to find out what is that bag which has the chocolate ok and amit actually loses the game correct? Let me now call amit and ask him this question why exactly he lost the game? Was it out of shear bad luck or was it because his strategy wasn’t correct. HI amit, hello sir, I saw the game that you played, it was interesting, I am just wondering if you understood the nit critics of the game, the game is not simple as it appear to you right? so what just happened in the game, vidya tempted you people to play the game to win the
 
chocolate correct? As she was smart, she said she opened up a new bag which did not have a chocolate and tempted you to change; you did not change while shubudha changed right? You lost shubudha won my question is did shubudha get lucky here and did you get unlucky? Or if you are given a second chance should you swap? Or should you not swap? What do you have to say? Sir, I don’t think it matters because in the end I have to choose one cup out of three, yeah so why does it matter that I have to swap? My chances are same, looks like it correct yeah, out of three I have to choose one in the end I don’t think it make any difference I don’t know I think it was just a luck, yeah so you know life is full of deceptions we think we think this is not the right way to do but that will be the right way to do, sometimes we feel that this is the right way to do and we will end up realising that this is not the right way to do here is one such lesson of life where I am going to show to you that swapping has a huge upper hand over not swapping by that I mean when vidya tricks you, you should succumb to the trick, temptation of changing, if you decide to always change your mind, you have higher chances of winning the chocolate shall we see how? Sure. Have this three cups with me one two and three perfect as an example I don’t have chocolates I don’t have jar so we should adjust with this, I need something to ok correct, this will be the chocolate alright? I am going to hide this some where you are not going to say it right? This is the chocolate three glasses alright? Ok. Turn that side you do not know where the chocolate is ok there are two glasses where there are no chocolate and there is a glass with a chocolate, let say ok so let me clear my table so that it is visible to you right amit? No chocolate one chocolate here start, I have to choose yeah, two glasses do not have chocolate one glass has a chocolate; hmm I will choose middle one, middle one? Yes it doesn’t have a chocolate you choose middle one touch the middle one; this was your choice correct? You choose this yeah but then I am going to show you that this doesn’t have a chocolate and now I am going to throw this away from the scene now you are left with two choices this or this? If you want you can change your mind, change your mind and choose this or don’t change your mind and stick to this what would you like to do? I will not change my mind ok the point is the same right? Yes sir changing mind or not changing the mind doesn’t matter right? You are not changing your mind you lost, its luck na? Its luck yeah so what if this had instead of this, this had it you would have won exactly correct, again you got unlucky right? so we will do one thing, ok why don’t we repeat this experiment let say some fifty times, ok as long as it is possible for us. Sure you do one thing you stick to only on strategy hmmm you say sir I will not swap come what may, use that strategy some thirty times ok? ok and then the next thirty games will be you will always swap whenever I say whenever I show you an empty jar like this you will say I am sorry whenever you show an empty jar like this you will say sir I choose this but I plan to swap ok change sure, thirty this way thirty that way let see how it goes, ok we will make a note of how many times you win in the previous in the first strategy and then see how many times amit wins in the second strategy and let us decide for others which is the better method. Now we all have a feeling that it doesn’t matter what strategy you choose, you win or lose with the same chance, the chances of winning or losing is a same or may be not will see this in detail with this experiment. Isn’t this counter institutive? We thought both seemed a like you see amit told me that how does it matter it looks like in both the cases I am choosing something my chances of winning should not change but our quick experiment that I did with amit I was making him turn that side and I was trying to play the game with him he won more number of

times in the second case where he was swapping right, he was winning less in the first case where he was not swapping see if we play the game once we can probably say oh I lost because of bad luck we played the game many a times if you observed we played the game twenty times each for this strategy and this strategy somehow the second strategy of swapping seem to have an upper hand, why? So now the question is how do I even experiment and decide that one strategy is indeed better than the other? Computation to our rescue lets see.
MONTE HALL - 3 DOORS AND A TWIST 02
So first of all let me give you a brief introduction of what Monte hall problem is all about, in Monte hall problem we have three doors two of them comprises of goods and one of them comprises of a price say bmw in this whole programme screen cast we will be using bmw as the price. So in Monte hall problem participant is asked to choose any one of this doors, after he or she had made his or her choice the host ask the participant to change his choice what the host basically does here is he opens a particular door out of these three doors ok now we are left with only two doors one that has been chosen by the participant and one that has been opened yet so now the host ask the participant to change his choice, it depends on the participant to swap or not swap his or her choice now what the participant do here is should he swap or not swap this is the question that we should answer ok so this seems question will be exploring will be answering in the programming screen cast will have a kind of setup here in which we have three doors two of them comprise of goods and one of them comprise of bmw after the choice whether the participant swapped or not swapped we will we will try to explore this fact that what is the optimal strategy here, whether the participant should swap or not swap? Let us try to explore this fact, so let us start with the programming screen cast of Monte hall. As I said we need three doors here so I will be taking a list here namely doors ok this is the list doors, I will be taking another list here called goat door that will keep a track of the door that comprise of goats. After that I will be taking two variables swap and don’t swap this will take care of the fact of number of swap wins and number of don’t swap wins, swap will basically keep a track of number of swap wins and just I will write here number of swap wins and don’t swap will keep a track of number of don’t swap wins don’t swap wins ok now that we are done with it we will generate a random number here that will keep a track of what particular door will comprise of bmw? So since we are given only three doors here we will call them zeroth door, first door and second door so we have to generate a random number here random dot randint from zero to two ok so either any of these three doors will comprise of bmw so I will just write here ‘x’ will comprise ‘xth’ door will comprise of bmw ok now that we are done with it after that I will just write doors x will comprise of bmw yes we are done with it now, now the rest of the doors should comprise of goats now I will just do that here I in range just write zero to three since this will take into count that this is zero one and two so if I here is equal to is equal to ‘x’ then to continue ok, continue what does continue what does continue do here, what purpose does it serve here, if I write continue then it will go to the start of the loop if I write continue it will go to the start of the loop since the ‘xth’ door is already comprise of the bmw we only need to take into the count the doors except ‘x’ so if I equal to is equal to x here it will again go to the start of loop and implement i, because we are not considering x here we are only considering the doors that comprise of goat else what we are going to do here else will just see doors of I it will comprise of goat so you just write goat here, one thing we have to do here we have to append goat door also here goat door dot append and particular index that is I here so we are done with the doors two of them comprises of goat and one of them comprises of bmw after that we have to make the user input its choice so let us do that choice is equal to int enter your choice after that int input you
 
just write int input that will make the user input his or her choice now we have to we also now that user has made his choice now the host will ask the user about swap or not to swap but before that he will open a door, so door open will take a variable here door open I will again generate it randomly here so I will write random dot choice goat door now please note this fact that we can only open the door that comprise of a goat we can only open the door that comprise of a goat so we are only considering goat door here, I hope that you are familiar here with random dot choice we have already explained it so goat door is a list here from which from which it choice from which a door will be will be taken randomly so here we are we have to open the door only comprise of goat so I will write here open a door that comprises of goat. Ok now that we have opened the door after that what we have to do here is we also need to take care of this fact in mind that the choice and the door open should be same here for example if the participant has made a choice of a door that comprises of a goat and we are also opening that particular door please note the fact that this is not allowed here so we need to also take care of this fact that choice and the door open shouldn’t be same so I will just have a while loop here while door is equal to is equal to choice I will again and again choose randomly from the list goat door so I will just write door open is equal to random dot choice goat door you just need to write here I will write the comment here door open shouldn’t be equal to choice made by the participant ok so we have also done that after that we have to give a choice to the user whether he or she wants to swap or not so you just write swap int input we don’t need to write int here you just write input do you want to swap? He or she will answer in y or no or in y or n ok so done that after that you have to apply a if loop here so just write if ch is the choice made by the participant yes then it will be y then what you have to do here is if doors choice is equal to is equal to goat that means he made a choice of door that comprised of goat at initial stage then he will win here print player wins ok and you have to increment swap variable here else what you have to do is else print player lost, I will again explain the if else loop here what we are doing here is if ch is equal to is equal to y that means the player has chosen to swap if he has chosen to swap then we have to we have to take care of the fact that if he has chosen goat in initial stage in initial choice then if he swaps here then obviously he will get a bmw, because already a door comprising of goat has been opened and a door that has goat he has chosen in its initial stage and now he is swapping now if he will swap he will get bmw ok so he is winning through swap so we will increment the swap variable here else if he has chosen bmw at his first place and now he is swapping obviously he is going to lose this game so now we are done with if ch is equal to is equal to y and if he doesn’t chose to swap here what will he do here? If he doesn’t chose to swap here will write if doors choice is equal to is equal to goat. If his choice was goat initially then and he doesn’t chose to swap to then he is bound to lose the game so you will just write print player lost done else if he didn’t chose goat at his first place then he will win because he has chosen bmw in at in his initial choice so just write print player wins. Ok and now he has won because he hasn’t swap so you have to increment the don’t swap variable here so just increment the don’t swap is equal to don’t swap plus one. After that you have to print this number of swap and don’t swap wins, so let us try to run this programme so just save it Monte hall dot, sorry so let us try to run this programme again there is some error here I will just show you it is saying random is not defined because we haven’t imported the library random so you just write import random, list index out of range it is giving us an error list

index out of range so how can you handle that? Let me think about it, we can easily handle that I think we need to initialised the list here we just initialise it with zero ok since we are only using three doors here multiplied it by three also initialise this particular list here that is goat door so you write zero here and multiplied with by two, so again run it name door is not defined so it is basically doors not door let me check if I have used it in some other place no so let us try to run it again, enter your choice so you have to enter your choice from of your door choice it can be zero one or two so I will enter zero, do you want to swap? I will choose swap, so player wins ok now the player has won because he has swap, again I will run it, enter your choice I will enter two here, do you want to swap? No. Player wins also here so again run enter your choice I will enter two, do you want to swap? Yes I want to swap the player lost because he or she swapped again run one do you want to swap? Yes. Player wins again enter your choice? Two. No, the player lost so how can we keep a track of this how can we find out the what is the optimal strategy here, I am really confused so what I will do here is I will run this programme again and again for example ten times and then try to find out what are the number of swap wins and number of don’t swap wins here so that I will just take a variable here so I will just take a variable for example I took j, j is equal to zero and I have while loop here, while j is less than ten I will run ten times for that you have to indent it properly so indent it properly so since we have to run it ten times so I will just use a while loop here for that you have to indent it properly ok, so now this has to go here, this has to go here, this here now it has to be inside the while loop after that the choice thing will also inside the loop so you just write choice here this if loop was inside this if loop so this is nested basically this else is for the above if please indent it properly I will request you otherwise you will get an error after that this else so for the above if ok now that we are done with it. So let us try to run it. Enter your choice, zero. Do you want to swap? Yes. Enter your choice, two. Do you want to swap? Yes. Enter your choice, one. Do you want to swap? No. Two swap, yes. One swap, yes. So it is going on and on I think I didn’t I think we didn’t increment the j point j variable here, yes you need to increment the j variable here so just write j is equal to j plus one so that it just run for definite number of times ok so I will just do that, ok we have exhibit it now let us try to run it again so that we can get what is optimal strategy here. Enter your choice, zero. Do you want to swap? Yes. Player wins, do you want to swap? No. Do you want enter your choice, two. Do you want to swap? Yes. One Do you want to swap? No. Zero, do you want to swap? Yes. Enter your choice, two Do you want to swap? No. Enter your choice, two. Do you want to swap? Yes. Enter your choice, one. Do you want to swap? Yes. Enter your choice, one. Do you want to swap? Yes. Enter your choice, zero. Do you want to swap? Yes. So here number of swap wins as you can see is five and number of don’t swap wins is one so is swapping is the optimal strategy here? Do you really think so? Is swapping the optimal strategy here? Let us try to run this once again and try to find out what is the optimal strategy, so let us try to do that again here zero, Do you want to swap? Yes. One, no, two Do you want to swap? No. One, no. Two, yes. Zero, yes. Two, yes. One, no. Zero, no. One, yes. So here also number of swap wins are greater than number of don’t swap wins so I will run it once again so has to get the clear cut idea of what is happening here? Enter your choice, zero. Do you want to swap? Yes. Player lost, one, Do you want to swap? Yes. Two. Do you want to swap? Yes. One, Do you want to swap? Yes. Two, Do you want to swap? Yes. Enter your choice, one. Do you want to swap? Yes. Zero, do you want to swap?

No. Two, no. One, no. Zero, no. So number of swap and number of don’t swap wins are equal here so we are getting difference distribution but in every case that we have run here number of swap wins are either greater than number of don’t swap wins or they are equal to number of don’t swap wins. So we can say that we are not sure of this fact that we will always win if we swap but there is higher probability of you winning if you swap. Yes this seems right from the programme that we are doing here, number of swap wins are always greater than equal to number of don’t swap wins so we can say that there is higher probability of you winning if you swap and there is lower probability of winning if you don’t swap, so now that we are done with the programme, we will just go through the programme once again so what we are really doing here is first of all you have to make two list, first one is doors and second one is goat door we are taking only three doors here, zeroth door, first door and second door and we have two goat doors here, two of them comprise of goats and one of them comprise of bmw, next what we are doing here is we are taking the track of number of swap wins and number of don’t swap wins through these variables after that we will have a while loop, while we are using a while loop here because we need to keep a track of number of swap wins and number of don’t swap wins ok, so I am running this programme ten times, you can run it fifty times, hundred times and check what is the optimal strategy? According to me it is number of swap wins it is swapping strategy and it will work in your case too please check it after that and taking the variable ‘x’ here this particular door except door will comprise of bmw then we are using a for loop here because the rest of the doors would comprise of goats except door comprises of bmw and rest of the doors comprises of goat, now what we are doing here is we are using a new key word here continue why I am using here because except door already comprises of bmw and if I is equal to is equal to ‘x’ here then we have to continue, we have to bring the control of the programme to the start of the loop because we are not considering ‘x’ here we are considering list of the doors here and else if I is not equal to ‘x’ then doors at I will comprise of goat, I also need to append in goat door list because that is keeping a track of doors that is comprise of goats after that you have to enter your choice ok the choice the participant chooses after that door open now the host will open one of the doors ok please note this fact in mind the open door and the choice shouldn’t be equal ok? they shouldn’t be equal so we are using the while loop here so door open is equal to random choice door since we are already using a goat door list here I will just make a choice from the list goat door ok, after that you have to make the user input whether he or she wants to swap or not ok, you just ask the user do you want to swap y or n if ch is equal to is equal to y then if he has if ch is equal to is equal to y that means he or she wants to swap and he has made a choice of goat at first place and if he has made a choice of goat at first place and now he is choosing to swap then he is bound to win, now he will get a bmw so in this particular case the player wins he has won because he has chosen to swap so we will increment the number of swap wins else he will lose the game after that if he doesn’t chose to swap and he has chosen goat in his initial choice then he is bound to lose the game, else if he has chosen bmw and he is not interested to swap that means he is going to win the game, in this particular case number of don’t swap wins will increment it will be incremented. Now since we are using while j less than ten we are using j variable here we need to increment j here so we incremented j here after that we are printing number of swap wins and number of don’t swap wins. I hope you

understood this particular programme on Monte hall and this programming screen cast is useful to you guys thank you happy leaning.
ROCK PAPER AND SCISSOR- CHEATING NOT ALLOWED -01
Rock paper scissor I win, rock paper scissor I win, rock paper scissor draw, rock paper scissor draw hey guys what are you playing? We are playing rock paper scissor ok. What is that? This is scissor, ok this is the paper, this is the rock, rock cuts the scissor, the scissor cuts the paper and paper cuts the rock, the rock cuts the scissor, the scissor cuts the paper and paper cuts the rock did you get it? Can you explain? You will not understand please let us play don’t waste our time don’t disturb ok please. Rock paper scissor, why are you cheating? Where did I cheat? You changed your sign just now! No no don’t lie, you show scissor then you changed to paper! No no you are simply telling, I don’t want to play with you. Hey vidya can I talk to you for few minutes? Sure. My friends were playing rock papers scissors game now I understood I goggled it. One of my friends were cheating I want to create the mechanism where no one can cheat, is there any way to do that? Well I remember having studied something like that oh yeah! In nptel there is a course called joy of computing in which actually the professor teaches a mechanism through which we can play rock paper scissors in which no one can cheat, definitely you should take a look at it. Oh yeah! Thanks vidya definitely I will take a look at it.
ROCK PAPER AND SCISSOR- CHEATING NOT ALLOWED -02
I was a ten old kid when i play a whole lot of games with my dad and dad would invariably win be it arm wrestling or be it running dad was number one or even with indoor games such as chess or tick tack tow anything that involved logic dad would was dad was way faster than me, there is no absolute game where i could win over him and that is when i came across this game called the rock paper scissor where muscle power or logic had no role to play, it was a game which involved sheer luck and i was a happy kid and this game became my the favourite. Let me now tell you the rules of the game called rock paper scissors there are three items here as i told you rock paper and a scissor the point is all these three items are equally powerful and at the same time equally power less every single item is less powerful than some other item and more powerful than some other item for instance a paper is less powerful than a scissor because a scissor can cut though a paper while a paper more powerful than a rock because it can completely cover the rock that’s the story with the paper now coming to the rock a rock is more powerful than a scissor as you see a rock can smash the scissor while a rock is less powerful than a paper simply because a paper can cover the rock, lastly a scissor, scissor is more powerful than paper as it can cut the paper into pieces but it is less powerful than a rock as stated already, two people randomly choose an item and they choose one of the three items rock paper or scissor the moment they choose it they declare it by showing the symbol a close fist denotes a rock a palm for a paper and a V symbol for scissor. Once they pick they both decide which item is more powerful than the other and declare who wins as you see there are several possibilities here there is also a possibility of draw please note that is when both people choose the same item, let me give you a few examples assume dad chooses rock and i choose scissors obviously dad wins because a rock can beat a scissor in case dad chooses paper and i chose scissor obviously i won because a scissor cuts the paper and assume dad and me both ended of choosing rock we call it a draw, let me enumerate all the cases. Assume dad chooses rock son also chooses rock it is a draw, dad chooses rock son chooses paper, son wins, dad chooses rock son chooses scissor dad wins, paper and rock dad wins, paper paper obviously a draw, paper and scissors son wins, scissor and rock son wins, scissor and scissor a draw, scissor and paper dad wins these are the only cases you can see, this is a great game to play but with time you will realise that there is room for cheating, how do we patch this up? Is there a way to patch it? The course is about the joy of computing, is there a solution to this problem through programming? Any ideas, here is a straight forward solution this is how the interface will look like after i finish coding, the first player is asked to enter one of the three numbers zero one or two where zero stands for rock, one stand for paper, two stands for scissors so firstly the son comes and enters a number and then goes away from the place, the screen is cleared and then comes dad and he enters his choice of the number zero one two based on what is the item that he has chosen and then he goes away from the place and both of them come together and they observe who won the game, that we both of them are committing to their item nobody can cheat here, the computer finally declares who is the winner well it’s very easy to program this but don’t you think its cumbersome for dad and son these two players to come inside their room punching their
 
choice and then go out, they should keep doing this a game requires both of them to come punk and go back and then both of them to come together and then see the result, looks like this is not a feasible way of creating a good interface, is there a better way? Let us see. Here is a very cool way to do this, dad and son they both secretly come and chose a placeholder in a ten digit number, what do i mean by this? Assume these are the ten digit holders and the son says i am going to choose the third digit which means his item is going to be hidden here and dad comes separately and then chooses his placeholder, assume he chooses the seventh digit which means his item will be stored in the seventh digit and then now dad and son both of them sit together, dad doesn’t know son’s placeholder son doesn’t know dad’s placeholder they both sit together and they start typing their ten digit numbers by hiding their secrets item in their secret place holder, you see the idea is cool can we make it a little cooler? You see with the lot of intelligence it looks like one person can guess what the other person is choosing it looks like it although i am not so sure, you should tell me whether with some amount of intelligence one player can guess what the other player player secret placeholder is, so let us make this game a lot more complicated. I am going to bring in two new changes to the game so change one, you are not going to assign zero one two for rock paper scissor even that’s a secret, a zero for son could be rock but zero for dad could be scissor so they input this information secretly just the way they input their placeholder secretly and the second one would be why take a ten digit number with entries being only zero one two, let us take an ordinary ten digit number each placeholder can be anything between zero one two three four five six seven eight nine, what i will do is, i will put my secret zero one or two in my secret placeholder and you see you can make it further complicated by increasing the number of digits, why necessarily ten digits you can make it fifteen digits or twenty digits right it probably will become difficult for people to enter that bigger number but is till you realise that bigger the number of digits more complicated the game becomes for the other person to guess that is.
ROCK PAPER AND SCISSOR- CHEATING NOT ALLOWED -03
As you know rock paper scissor is a two player game so first of all let me do this assignments for say player one and player two, for player one we have zero as a rock, one as the paper and two as the scissor, similarly for player two we can do the assignments but let to we have zero as the paper, one as the rock and two say as the scissor. Please note that we are using dictionaries here to do the assignments, now we are done with the assignments you can also make the user input this assignments it’s your wish completely your wish now we have to make the user input the number and the secret bit position in the number for that I will a while loop by true , first of all let us make the user input num one that is for player one the choice of player one input this is for player one, player one enter your choice for player two will have num two input player two enter your choice, we also have to make the user input the secret bit position for player one we have bit one int input player one enter the secret bit position for player two we have bit two int input player two enter the secret bit position. Please observe that we are using int here for num one and num two we used only input the default input tag in python is string but we want bit one and bit two to be integers so we will type cast it to int next please see that this while loop will run till infinite times we have to restrict this while loop, this while loop should run till the number of times till user wants so will have one more parameter here say ch and will make the user input this parameter will have ch input will say do you want to continue y is for yes, n is for no. If ch here is n then while break out of this while loop break, now we have now we are done with the assignments as well as input of the required parameters so next step is to quote the rules for rock paper scissor I assume that u have watched all the videos and you know the rules of rock paper scissor but still for the record let us revise for rock paper scissor. In rock paper scissor we have three entities one is the rock, second one is the paper and third one is the scissor, we have rock paper scissor, paper can cover the rock and rock can crush the scissor and scissor can cut the paper please observe that nothing is one important here everything is equal powerful here so let us try to code for rock paper scissor, for rock paper scissor we will have a function rock paper scissor, will pass num one num two and bit one bit two next step would be calculating two more parameters which can be calculated from num one bit one num two bit two, will calculate p one this is for player one, this is basically int num one bit one mode three what is p one here? P one basically is the placeholder at bit position bit one in num one and will mode it with three because the numbers that we are input here that we are going to input here are basically decimal numbers but we want answer in zero one two so will do mode three here similarly for player two we have p two in which will have int num two bit two mode three not that we are done with calculating p one and p two you can code the rules very easily will do if player one p one is equal to is equal to player two p two then this will be a draw, print draw then the next rule else if, if player one p one is equal to is equal to player two rock and player two p two is equal to is equal to say scissor as you know rock can crush the scissor so player two wins here sorry player one wins here, player one wins. Next rule if player one p one is equal to is equal to rock and player two p two is equal to is equal to paper as you know rock can crush the paper cut as you know paper can cover the rock so player two
 
wins here. Next rule player one p one is equal to is equal to paper and player two p two is equal to is equal to scissor as you know scissor can cut the paper player two wins here, print player two wins else if player one p one is equal to is equal to paper and player two p two is equal to is equal to rock as you know paper can cover the rock so player one wins here print player one wins. Next rule else if player one p one is equal to is equal to scissor and player two p two is equal to is equal to rock as you know rock can crush the scissor so player two wins here print player two wins. Next rule else if player one p one is equal to is equal to scissor and player two p two is equal to is equal to paper as you know scissor can cut the paper so player one wins here print player one wins. So now we are done with coding the rules too we are done with the assignments we are done with the input of required parameters and we are done with coding of rules too, now so now let us call this function here will call rock paper scissor and will pass num one num two bit one and bit two so this is done too let us try to run this programme. There is no end of literal here did let us try to run it again so enter your choice, choice is basically number here I will input a three digit number one two three I will input three digit number here too five six seven say secret bit position for player one zero for player two it is one it is a draw, please observe that here we are input number num one and num two are input in the form as a string so they texting will start from zero and go till number of digits minus one I will repeat then texting will start from zero and go till number of digits minus one ok so we will have to input the secret bit position accordingly now let us look at the output we enter one two three and five six seven and the secret bit positions are zero and one, for player one the secret bit position is zero so it will be one, for player two secret bit position is one it is six, if we mode six mode three then it will be zero, for player one we have one for player two we have zero for player one, one is paper and for player two zero is also paper so it results in a draw, if you want to continue you can type y and if you don’t you can type no will have one more example here will do five six seven eight say and two three four let us enter the secret bit position for player one it will be two say and for player two it will be one it again calls for a draw let us have some another example two three four, one six seven eight zero and three it is again draw. One more example seven eight nine, four five six two and one player one wins so you can try it as many number of times as you want. I hope you enjoyed the programming screen cast I hope to see you again in the next programming screen cast thank you, have a nice day.
ROCK PAPER AND SCISSOR- CHEATING NOT ALLOWED -04
Hey amit, sowjanya yeah hi, you are playing rock paper scissor game na yeah I will show you something read this ok. Ok you wrote a programme yeah, so that is nice, player one assignments, player two assignments enter the position ok enter a five digit number it looks awesome yeah I think we can go with this way and play, can we play? Awesome yeah! Just two minutes enter your assignments yeah yeah yeah what about me? Enter your assignment ok yeah just give me two seconds. Now you guys can play ok! oh it’s my turn my turn yeah now I play yeah, yeah oh yes see I won ok, ok let me second turn now I will wait, wait no, no see again I won yes oh god! Thank you so much draw!! Did you like the game? Yeah, yeah yeah no one can cheat. Oh! Yeah.
SORTING AND SEARCHING – 20 QUESTIONS GAME - 01
Hey amit lets play a game, what game? It’s called twenty questions game what!!? You have to keep a number in your mind between say one to ten thousand ok and I will guess it right less than twenty attempts, less than twenty attempts!! Yeah. I don’t think it’s possible oh it is very easy. Ok the rules goes like this I will ask whether the number is less than equal to or greater than some number so you have to just say yes or no or it is less than or equal to or greater than, you will ask me whether my number is less than, equal to, greater than your some random number yeah yeah. I will say a number, ok let’s try this say you keep five and will start from one to ten, one to twenty I will ask whether your number is less than ten, you have to yes then I will ask again some questions sure let’s play this, yeah? Yeah I will crack this in less than twenty attempts ready? Will see ok keep some number ok I have, between one to ten thousand? Yeah. Is your number less than five thousand or equal to five thousand or greater than five thousand? Less than five thousand. Less than five thousand, ok so is your number less than two thousand five hundred, equal to or greater than two thousand five hundred? Less than two thousand five hundred. Less than! Cool, now is it less than thousand two fifty equal to two fifty thousand two fifty or greater than thousand two fifty? Less than thousand two fifty, less than ok. Again is it less than equal to greater than six twenty five? Hmmm less than. Awesome, I don’t think you will crack in twenty attempts, ah no wait. Is it less than equal to greater than three twelve? Less than three twelve. Awesome, less than equal to greater than one fifty six? Less than. Hmmm now it’s getting closer, is it less than equal to greater than seventy eight? Less than. Ok less than equal to greater than thirty nine? Less than thirty nine. Awesome, is it less than equal to greater than nineteen? Less than nineteen. Is it less than equal to greater than nine? Greater than nine, so it’s greater than nine, is it less than equal to greater than fourteen? It’s exactly fourteen yaar! Yeah wow I cracked in eleven questions see; exactly eleven how is it even possible? What’s the logic behind this yaar? That’s a good question.
SORTING AND SEARCHING – 20 QUESTIONS GAME - 02
You saw what just happened we played a beautiful game and even we wrote a piece of code for it. Let me now bring in a small variation to the game, in the variation is the following. I will tell you that I have a number in my mind and that number is less than one lack common guess the number, how this difference is this game from the previous game so, assume you keep the number six hundred in your mind, I know it is less than one lack, right? How do I? How on earth will I guess that it’s going to be six hundred? I should ask you this question is it greater than five hundred? Is it greater than ten thousand? Is it greater than twenty thousand? And so on right? is there a smart way of doing this? Think about it. I am going to tell you something which looks like very different from the game I have been discussing a number one to one lack guess what the number is? A variant of what we did just now right. I am going to give you an example which looks very different but these two things are the same, example is that of how would you search for a word in English dictionary? Let’s say you want to see the word proclaim p r o c l a I m proclaim how will search for this in the dictionary? You will open the dictionary in the middle, why middle? You do not know whether proclaim is in the first half of the dictionary or the second half of the dictionary, the moment you open the dictionary in the middle you will get words starting from ‘n’ letter ‘n’ so you know for sure that first half of the dictionary is all those words is starting from a b c d efghijklm n because you saw the word when you open the dictionary in the middle, so your word proclaim should be in the second half of the dictionary so what you do is you discard the first half and only look at the second half and again go to the centre of it centre of second half will now be let’s say ‘s’ words starting from s, now what can you conclude? From ‘a’ to ‘n’ was first half of the dictionary which you discarded and now when you take the midpoint of the second half you are seeing ‘s’ which means your word proclaim should be in the first half of this little cut down dictionary, in the second half its in the first half if you know what I mean. Right? Think about it, every time you open the dictionary by half you are discarding one part of it and retaining other part of it, correct? And so on and so forth you finally reached the word proclaim in no time because your dictionary size is reducing by half correct? What is this to do with the problem that we were discussing? Keep a number in your mind from one to one lack and I will guess what the number is. Can use the way I searched through a English dictionary that same method here, think about it, it is indeed possible. What you do is ok; do you have a number in your mind? Is it less than fifty thousand? Or greater than fifty thousand? You see what I am doing, like the dictionary I am trying to see, you see this line, is it on the left side of the, is it the first half of one to one lack or is it in the second half. If a number is in the first half you will say “less than fifty thousand” if your number is in the second half then you will say “it is greater than fifty thousand” and there I am, I know for sure I can now reduce my search space by half and now I will ask you id your number less than twenty five thousand or greater than twenty five thousand. Do you see that this method is exactly the same as searching through an English dictionary? Let us now go ahead and try to write a piece of code for this. Whatever we did just now is popularly called the binary search, the binary search words look complicated but there is nothing here. Binary means
 
cutting into two pieces and search in only one piece and continue doing it your space where you are searching will get halved and very, very, very quickly note the usage of the word very, very, very it is indeed so quick very, very, very quickly you will narrow down to your search key in no time this is called binary search.
SORTING AND SEARCHING – 20 QUESTIONS GAME - 03
Look at this array with thirty elements, can you spot the umber eleven here? Ah looks very difficult, you should look through every single element from the beginning till the end but what if this array was sorted, by sorted I mean what if this was in ascending order of the numbers, don’t you think it would have been very easy for you to search for the number eleven. This is the sorted version of the array, the list; do you see eleven right now? What did you just now do? You used binary search to find eleven, so the moral of the story is if you want to find for an element search for an element in a list, it is easier for you if the list is sorted. You see this is in general true with your life, you will find what you want, if you keep your life organised, if your list is organised in some ascending order if it is in ascending order searching for an element becomes very easy, you see so we have been teaching you how to keep, how to how to search for an element if the list is sorted but we dint teach you how to sort a list, let us now see how can one sort a list.
SORTING AND SEARCHING – 20 QUESTIONS GAME – 04
HI guys, in last video we saw, we saw that how we can perform binary search on a list of numbers which are sorted. So we saw that the, the list we provided for the function was already sorted which means that numbers where in ascending order one two three four five six seven eight something like that but in real world what happens that whatever you data whatever the data you get is not is not sorted it is actually some random numbers in some random orders and whenever you have to perform such kind of search that let’s say binary search and then you have to sort it, so sorting is the algorithm which as a lot of applications so in this program we are going to perform such sorting algorithm known as a bubble sort it is a very easy algorithm I will tell you how to, I will tell you the exact algorithm when you can use the algorithm to write your won program, we will write the program for bubble sort also so let’s see this, let me first given an array so let us assume that we have an array of size five and the elements are five one four two eight so what I want? I want to sort the elements of this array it means it should the final array should look like one two five four and eight so bubble sort is like that so in first loop what I will do so I will have two loops exactly so in first iteration what I have to do, I will compare the first two elements and see whether the first element is less than the second element are not, if it is not if the first element is not less than the second element then I will swap their positions so here five is not less than one so I will swap so one should come before five so it will become one five now I will move to the next two elements which are five and four so I will go there I will compare them and see the same thing which is, if five is less than four then it is ok otherwise I will swap them so five is not less than four so I have to swap them so it will become four and five so now I will move to the next two elements which are five two again I will perform the same I will check the same condition so five is not less than two so I will swap them so it become two and five I will move to the next two elements same conditions since five is less than eight so I don’t have to swap them so my array my first loop is over, I will go to the second loop and the second iteration in second iteration again I will compare the first two elements so I am doing the same thing so you can find the pattern here, in the first loop inside the first loop I must have another loop in that loop I should do all those things and whenever the second whenever the first iteration of first loop gets over the second instance come I will do the second again do the again perform the same thing so again I will perform compare the first two elements one and four since one is less than four I don’t have to swap anything I will move to the second two elements four is not less than two so I have to swap them so two comes before four it becomes two four, I will move to the next two elements four is less than five so I don’t have to swap anything now next two elements less than eight I don’t have to swap anything so after this my my array is sorted so I need the exactly something like it one two four five eight so now you know the algorithm I give you the simple basic idea of the algorithm I am not writing the pseudo code kind of thing, you will use this idea to write the program it’s the very simple program and I think that anyone can write it so we will see in the next video.
SORTING AND SEARCHING – 20 QUESTIONS GAME - 05
So, let me write the program for this algorithm which is bubble sort so let me write the function def bubble and the parameter will be the array which I want to get sorted ok, first let me compute the length of this array so for length there is a function length of’ a’ it check it returns the length of any lists which you provide there so length Len of ‘a’ will return me the length of this array or the list so I will write my first loop which is for I in range of ten which is the length of the array, so first loop is first loop should until the number of elements in the list ok? The second loop should start from the first element but after, after all the swapping see what was happening here, so after all the swapping the maximum element was going to the last position, so in the second pass we, we don’t have to we don’t have to compare that element or include that element in the comparison so we can safely exclude the last element which we got in the last pass so every time we will exclude one such element in such way will get the sorted array. So the second loop will go for j in range it will start from zero ok but it will go until n minus I minus one, minus one is because of the range issue because we have to go until the minus one part and minus I is that when the ith element when the maximum element gets to its the the last position then we have to exclude that element for that I am putting minus i, so it means that when I is zero it means that it is the first iteration it means there is no maximum element which went to the last position so we have to go to the last element in the second loop but after the after I becomes one it means that one of the maximum element first maximum element went to the last position when we have to exclude it so for that n minus I is required and after this after when I becomes two it means two maximum elements first maximum element and the second most maximum element went to the went to its correct position it means nth position and n minus one position we have to exclude it so that s why this condition is required. Then I just have to check the condition which ever I was talking about if a of j it means the current position is greater than a of next position which is j plus one if such thing happens then just swap it, I will create a temporary variable temp and I will assign it the value of aj in aj I will put a of j plus one and in a of j plus one I will put the temp variable, this is just swapping of two elements that’s it that’s all my programme should be my sorting is complete let me just create an array ‘a’ which I gave in the example of which was five comma one comma four comma two comma eight ok this was my array I will call my function bubble and pass this array let me print the elements of this sorted array for I in a that’s it I will print ‘i’, great my program is complete I will just run it cool one two four five eight so my array was five one four two eight got one two five four eight which is one two four five eight which is sorted see you can create your own array and you can run this programme and you will get the sorted array so this is how we perform a sort we perform sorting this is one of the algorithm, this is not the best algorithm that we have there are so many better algorithms for example quick sort, merge sort, heap sort and so other sorting algorithms but this is the basic algorithm which you guys can use, if you if you do not know much about sorting and after you learn more of the programming and algorithm and data structures related things then you can go on to the more advanced sorting algorithms so
 
that your time it takes your function takes less amount of time in order to sort an array thank you.
SORTING AND SEARCHING – 20 QUESTIONS GAME - 06
You saw how you can sort a list, in fact you can sort it with an in build function python function as well but we taught you just for completeness sake for interest sake how can you manually sort elements in a list in fact sorting is a huge topic in itself we can go on and on and even give you a course of thirty hours duration only on sorting, there are so many techniques so beautiful so deep that it will take so much time but let us just limit our discussion to one type of sorting technique which we showed you just now, it is left for you to now go and explore more on different techniques with which you can sort.
 SORTING AND SEARCHING – 20 QUESTIONS GAME - 07
Hello every one, so today we are going to write a program for searching, actually our main objective is to understand the binary search, you saw the play how a person can easily get a search a number in a list of numbers sorted numbers very easily in a less number of steps, will see why binary search works but before that we must understand how to simply search a number in list of list of given numbers for that we will use the linear search it is a conventional simple search will go through each values and try to find our element which we want to find in that list and we will see how many numbers of steps it takes and then we will switch to binary search. So I will start my spyder I will type spyder in my terminal and wait for it, ok I will write my programme in a new file entitle zero I will change the name so what I want first I want first as list of numbers for this programme we will take the numbers in sorted order in ascending order, the numbers will always be this one, two, three, four, five, six something like that I means it should always be sorted I mean the numbers will always been ascending order, first I have to create a list of numbers for that I will write I will write a for I in range let’s say I want numbers from one to thousand one thousand one in range if I want a number from let’s say one to n then I have to I have to give the argument as n plus one because it always prints up to number less than the given number, I will write here let me save this as linear search ok awesome, for that I need a list so let me write the name as element if I gives the simple bracket to create a list I will use this, so in order to add elements into a list there is a function name append I will just write elements dot see it will show you all the functions which you can use with the list that is the beauty with spyder so it is just tap it will give you the append and I will write here that’s it I created the list ok that’s it I can just run this to see my list ok I will run the program I will just type element and it will show me the numbers from one to thousand, you can see all the numbers from one to thousand awesome! So we recommend you write all the programmes in function, let me create a function here which I can easily call def linear search and I will give the range here that’s ‘n’ so that the ‘n’ I can give here also I will give the parameter ‘x’ I want to find now let’s see this. I will give the indentation ok awesome this is done I have created my list of numbers now what I want? I want to search this element ‘x’ in this list for that I write another loop for I in see now my list is complete I have created the list I can just iterate through the elements of this list which is very easy just I have to write since list is iterative what do I mean by iterative? You can just goggle it you will understand what is iterative, there are some elements in python which are iteratable and some are not iteratable if it is iteratable you can go through it like a loop I will write for I in the list name which is the element ok see here element was created I can for I can go though it here also I can element if I just print it, it will give me the elements so I can iterate through the elements through the elements of element ok for I in element ok now I am iterating over the well use of element I will write its only one if condition, if I is equal equal to my number ‘x’ which I want to find and I will just print yes! I found my number position str ok since in this example the numbers are sorted from one to n I can just write str I minus one or I can simply I can write str I ok so we have to call a name ok I have to also print that whether found the number or not, if I didn’t find any number so for
 
that I will use the flag value let say flag is equal to zero ok, initially the value is zero, if I found this number then I will put the flag value to one after that I write a if condition if flag is equal equal to zero I print number is not found that’s it good so my programme is complete now let me just run this and that’s it. I will call the function linear search see whenever I type this it will show me that it needs to ‘n’ and ‘x’ so n is my range so here I will put thousand one next what number let’s say I want to search fifty ok just type it will show me yes I found the number at position fifty because the number has sorted. Ok cool now I want to know how many iteration it took for me to get to this number for that what I will do? I will create a variable count here zero its initial value and whenever I am going through an element here I will do count plus is equal to one I am increasing the value by one and if I don’t need to whenever I find a number and the list I don’t need to go again go through the other elements of the list so I will just break the loop here because I don’t need to go to find go to look at other numbers because I already got my number so here I will break and if flag is zero it will find and I will print the count that’s it let me write here number of iterations is equal to plus str because I need to change this into string awesome! This is done let me check. Linear search give me one thousand sorry the number is fifty seven say ok now you can see, yes I found my number at position fifty seven number of iteration it taking is fifty seven because before fifty seven I have to check all the numbers one two three four five six seven eight nine up to then I will go to the fifty seven so you can see that if the number of elements in the list are very huge let’s say one million and you want to search a number which is very far end let’s say the number I want to search is one million only then it will take one million near one million iteration to find that number which is the very huge, in the game we saw that when we can use the advantage of sorted number whenever the number is elements in an array or list is sorted we can use that extra information for searching a particular number easily that is the correct for binary search so will see how we can use this extra information to search an number in a list of sorted numbers and drastically decrease the number of iteration so that we can in very less number of iteration or to say the very less number of time in less time we can search the number so in next video will see the binary search and will see how we can iterate
SORTING AND SEARCHING – 20 QUESTIONS GAME - 08
Hello guys, in last video we saw the linear search we saw how inefficient it is to search a very big number in a very big array suppose you have million of numbers in a array and you want to search close to million then it will take around a million of steps to search that number in liner search so it is very inefficient because you do not have that much of memory power or that much of even time to spend on an array of size one million and that too if the array is sorted so here what we are going to see is the very very good algorithm known as binary search whenever you get an array you sort it either in ascending order or in descending order, you are getting some extra information which you can used to search the search any element in an array in very less number of steps that exactly what we are going to see here so in the game, in the game that you saw in the video there were two players one was ravi and amit they were playing a game so ravi has an idea that he can guess a the number which amit has thought in a very less amount of iterations so the game is like this you search you guess a number between one to thousand and then the second person asks second person first computes the midpoint of that array so in one to thousand the midpoint is five hundred then he asks whether this whether the number that you have guessed is equal to five hundred or not if it is five hundred then ok I got the number if it is not five hundred then it is he ask whether it is less than five hundred or it is greater than five hundred so suppose the number you have guessed is less than five hundred then you can see that you can safely discard the other five hundred elements in the array because your number will never go beyond five hundred you have already said it is less than five hundred and the numbers are sorted so you can never go you do not have to search the other part of the array so you can safely discard the numbers from five hundred to thousand so number of elements that you have left now is one to five hundred then again the I will ask I will compute the midpoint of this array which is left that is one to five hundred which is the midpoint is two fifty then you will then I will ask you again whether your number is two fifty if you says yes then ok if you says no then again I will ask whether it is less than two fifty or more than two fifty, if it is more than two fifty then again same logic I will use since it is more than two fifty it I do not have to search it less than to fifty because it will never happen that the element will present in the array between one to two fifty so I can safely discard the numbers from one to two fifty now the arrays which I have left is two fifty to five hundred again I will ask the same question that is I will compute that midpoint of two fifty to five hundred and I will use that midpoint to ask the question and go to the left part of the array and right part of the array this is the logic of binary system in this you are a every each iteration you are whenever you are computing the midpoint you are discarding the half part of the array this way you are size of the array is reducing by two at each iteration so you will exactly use this logic to do the binary search so let me right the definition of the binary search. Def binary search it will take two arguments one is the array let’s say array name is ‘a’ and other is the element that I want to search great, now I will create two variables I will use this variables to position my array, I want to know I will create a variable let’s say first position first pos which is zero because array starts with zero so I can safely take zero as my first position and the last position last pos sorry which is
 
the last position of the array, python is an function named it as len through which you can compute the length of an array so suppose if I type Len of a I will get the length of array now it gives the length of array gives the number of elements in the array but we know that list or array whatever you said in python starts with zero so you have to take minus one so let me try this in console suppose my array name is array one and the elements are one comma two comma three comma four comma five ok now if you type length of array one you will get oh there are five elements so you will get five but the position of fifth element is what? Is actually four because the array starts with zero, zero one two three four so suppose you want to retrieve the last element will type array sorry array one and if you type four here you will get the fifth element or you can type array length of this array one ok this length of array one will return the number of elements in array one which is five so number of elements in array one is five if I put minus one here so this this whole thing means it is five which is return by the length of array one minus one which is four so this will print give me the fifth element fourth element which is five so this is exactly what we are going to do here so I will put the last position is length of array minus one ok also I will take a flag value which I will use to see whether I found my element or not ok this warning means that all this variables have been you have created this variables but you are not using it so as, as soon as I use it all this warnings will go ok now I will create a while loop let’s see how to do this? And let me write this first and I will explain it how what exactly I am trying to do. So I will type first pos is less than last pos and flag is equal equal to zero what is this mean that? Keep this loop going on until the first position is less than the last position which is this two variables, if first position is always less than last position and flag is equal equal to zero I told you flag you can let me write a comment here flag means that flag go to zero that element is not been found so it means that you should continue the loop until first position is less than last position and you haven’t found the element you are looking for till than you have to continue this loop ok so what I will do first what was the strategy, so first I will compute the midpoint of the array so I will compute mid is equal to you write so I can compute the know to compute the midpoint of an array I will take the first element the position of first element I mean the first position of the array and the last position of the array and I will add it and divide it by two this why I can iteratively I can compute the midpoint of any sub array so I will write first pos plus last pos divided by two now if I write divide by two it will return me a float value, you can check here suppose if I five plus two divide by two it is giving me three point five but I exactly want a integer value so suppose the number is odd it should give a integer value either left or right I don’t care much but it should give me a integer position because it is a position if I use this float value then I will not be able to retrieve the element at that position so I need an integer value for that I will do the int there is called as integer division in python that is I will write five plus two, to this division it will give me three this is what I want so I will put this one more division operator here and I am done so I computed the mid now what I will check? I will check whether this element ‘x’ is present in mid or not I will write if ‘x’ is equal equal to a of because made is of position if it is there then I am done, I have to check for another thing so I will write I will make the flag is equal to one it means I found the element and I will write print element present at position I can write I can give the position of this mid variable which is I can write str mid you can add plus one also so that you can get the exact position but I am not writing it because I am assuming that you all know that array starts with zero so

in that context I am just printing the mid value that’s it you can return from here, it means that whenever you found the whenever you get the element which you are looking for you can return it you do not have to other computation I will just return from this, this return will return the function value which I am not returning anything it means it will get out from the function to the main I am calling the function that’s it ok now if it is not present at the mid position then I have to check whether it is on the left side or right side, for that I will write else if it is not present at the mid position if this ‘x’ is less than array of mid which means if it if ‘x’ is less than mid I can discard the right side of the array which means what? I can safely write that last position is shifted to what? Mid minus one because mid and after mid I can discard because mid is I the first question in the first condition I have checked whether it is present at mid or not, if it is not present at mid then I can discard the mid and all the elements after the mid so I will safely I will reduce the size of my array by positioning the last position to mid minus one this why I am discarding the other elements of the array or if it is not wait sorry if it is not less than the mid it is more than the mid then I can discard the first part of the array which is from zero to mid I can discard for that I will just shift my first position has first pos is equal to mid plus one that’s it ok and then the programme is over and if the function doesn’t returned anything after all these things it means the array I didn’t find the value which I am looking for so I can safely print here after this loop it means that loop is over but still I am not able I didn’t find the element I will write the number is not present that’s it now in last function the linear search you were printing the number of iterations also how many iterations it takes so here also will I would like to print the number of iteration it is taking to find this value ‘x’ so I will create a count variable count assign it to zero and at every iteration of while loop I will increase the value now here I have printed the element where it is present I will just print that the number of iterations are which is string of count ok cool, I just need to call this function so in order to call this function here I will create an array so let’s say my array name is ‘a’ and I will enter the elements in this array for I in range one to five hundred let’s say a dot append I and I will call this function which is binary search and I have to give the and let’s say the number I have to search is seventy so our programme is complete so I will just run this program to see the output. Ok that is showing the number is not present and I exactly did what the logic was present for the binary search and I know that number is there suppose if I type ‘a’ you can see that seventy which I am looking for is present but still it is showing the element is not present, let me try this for small number lets say number of elements or ten what I want to search is four let me try this, still it is showing that number is not present let me see the numbers one two three four five six seven eight nine ten, and four is there now what is exactly happening is that whenever the condition that I put here while first position is less than last position it might happen that some time the first position and last position will be the one number let say first position and last position are pointing at four at that time still we have one iteration search is required but this condition is will fail that is first position is less than last position it is showing that here the first position is not less than last position it is equal to last position and here it will fill and I will not be able to search this element so to do this I have to make this condition as less then equal to which means when first position is less than equal to last position until then you have to search for the element now you can see if I run this, it will show that number is present at position three zero one two three and the number of iterations is four because four times I have to switch to this, now

let’s see this, number of elements will be hundred and one and then I will search for number seventy and run this see the number is present at sixty nine, seventy. Now in linear search what we were looking for, we search for a number the number of elements we put where thousand ok ok and we were searching for the number thousand and it was taking thousand of iteration now here let’s see how many times, how many iterations it will take? I will run this the see the number is present at position nine nine nine and in ten iterations I was able to search this number ten iterations where it was taking thousand iteration in linear search it just takes ten iteration in binary search, suppose I make this one million let’s say ok and I want to search this number let’s say one lack ok see how many iteration it will take in just twenty iteration, in just twenty iteration I was able to find the number, whether as you all know with to find this number it would have taken one lack iteration in linear search so this is the beauty of binary search, you can do actually it takes exactly log of the number of elements in the array that is if the number of elements let’s say sixteen then it will take four iteration and thirty two then five iteration and sixty four six iteration so on because every time you are dividing by two and discarding the rest other part, you are taken only one part at a time this way one half of the array is every time discarded and you are reducing your space by two exactly by two every time by two by two by two by two becomes log of two log of base two so yeah we are finished with the binary search please if you have any questions post it on discussion form or you can if you think you can, this is a very simple programme you think you can create a more efficient more elegant program like this better than this please post it on discussion form it might help other people to learn ok guys thank you.

